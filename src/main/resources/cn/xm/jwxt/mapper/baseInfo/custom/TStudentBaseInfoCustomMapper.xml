<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.jwxt.mapper.baseInfo.custom.TStudentBaseInfoCustomMapper" >
    <resultMap id="BaseResultMap" type="cn.xm.jwxt.bean.baseInfo.custom.StudentClassInfo" >
        <id column="studentID" property="studentid" jdbcType="VARCHAR" />
        <result column="studentNum" property="studentnum" jdbcType="VARCHAR" />
        <result column="classID" property="classid" jdbcType="VARCHAR" />
        <result column="studentName" property="studentname" jdbcType="VARCHAR" />
        <result column="studentSex" property="studentsex" jdbcType="VARCHAR" />
        <result column="studentBirth" property="studentbirth" jdbcType="DATE" />
        <result column="studentPhoto" property="studentphoto" jdbcType="VARCHAR" />
        <result column="IDnum" property="idnum" jdbcType="VARCHAR" />
        <result column="enrollmentTime" property="enrollmenttime" jdbcType="DATE" />
        <result column="endTime" property="endtime" jdbcType="DATE" />
        <result column="isGraduate" property="isgraduate" jdbcType="VARCHAR" />
        <result column="isDelete" property="isdelete" jdbcType="VARCHAR" />
        <result column="remark1" property="remark1" jdbcType="VARCHAR" />
        <result column="remark2" property="remark2" jdbcType="VARCHAR" />
        <result column="classname" property="classname" jdbcType="VARCHAR" />
        <result column="majorname" property="majorname" jdbcType="VARCHAR" />
        <result column="collegename" property="collegename" jdbcType="VARCHAR" />
    </resultMap>

    <!--批量导入学生信息，传入班级id-->
    <insert id="saveStudentInfoList" parameterType="java.util.List">
        insert into t_student_base_info (studentID, studentNum, classID,
        studentName, studentSex, studentBirth,
        studentPhoto, IDnum, enrollmentTime,
        endTime, isGraduate, isDelete,
        remark1, remark2)
        values
        <foreach collection="list" item="detailInfo" separator=",">
            (#{detailInfo.studentid,jdbcType=VARCHAR}, #{detailInfo.studentnum,jdbcType=VARCHAR}, #{detailInfo.classid,jdbcType=VARCHAR},
            #{detailInfo.studentname,jdbcType=VARCHAR}, #{detailInfo.studentsex,jdbcType=VARCHAR}, #{detailInfo.studentbirth,jdbcType=DATE},
            #{detailInfo.studentphoto,jdbcType=VARCHAR}, #{detailInfo.idnum,jdbcType=VARCHAR}, #{detailInfo.enrollmenttime,jdbcType=DATE},
            #{detailInfo.endtime,jdbcType=DATE}, #{detailInfo.isgraduate,jdbcType=VARCHAR}, #{detailInfo.isdelete,jdbcType=VARCHAR},
            #{detailInfo.remark1,jdbcType=VARCHAR}, #{detailInfo.remark2,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <!--查询学生的名称和ID-->
    <select id="findStudentNameAndId" resultType="map">
        SELECT studentId as studentid,studentName as studentname from t_student_base_info
        WHERE isDelete = "1"
    </select>


    <!--根据学生id查询学生信息，包括专业、班级、学院-->
    <select id="getStudentInfoById"  resultMap="BaseResultMap">
        SELECT st.*,(SELECT className FROM class_major_college v WHERE v.classId=st.classID ) className
        ,(SELECT majorName FROM class_major_college v WHERE v.classId=st.classID ) majorName
        ,(SELECT collegeName FROM class_major_college v WHERE v.classId=st.classID ) collegeName
        FROM t_student_base_info st,class_major_college v
        WHERE v.classId = st.classID and studentID = #{studentid,jdbcType=VARCHAR}
    </select>

    <!--组合条件查询学生分页显示-->
    <select id="findStudentInfoListByCondition" parameterType="cn.xm.jwxt.bean.baseInfo.custom.CommonQuery" resultMap="BaseResultMap">
        SELECT st.*,(SELECT className FROM class_major_college v WHERE v.classId=st.classID ) className
        ,(SELECT majorName FROM class_major_college v WHERE v.classId=st.classID ) majorName
        ,(SELECT collegeName FROM class_major_college v WHERE v.classId=st.classID ) collegeName
        FROM t_student_base_info st,class_major_college v

        <where>
            <include refid="query_common_where"></include>
        </where>
    </select>


    <!--封装查询条件-->
    <sql id="query_common_where">

        <if test="studentnum != null and studentnum !=''">
            and studentNum = #{studentnum}
        </if>
        <if test="studentname != null and studentname !=''">
            and studentName LIKE '%${studentname}%'
        </if>
        <if test="collegeid != null and collegeid !=''">
            and v.collegeId = #{collegeid}
        </if>
        <if test="majorid != null and majorid !=''">
            and v.majorId = #{majorid}
        </if>
        <if test="0==0">
            and v.classId = st.classID
        </if>
    </sql>

</mapper>